{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/types.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  DefaultRouterOptions,\n  ParamListBase,\n  TabNavigationState,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport type { ColorValue, ImageSourcePropType, TextStyle } from 'react-native';\nimport type {\n  BottomTabsProps,\n  BottomTabsScreenProps,\n  TabBarItemLabelVisibilityMode,\n} from 'react-native-screens';\nimport type { SFSymbol } from 'sf-symbols-typescript';\n\ntype BaseNativeTabOptions = Omit<\n  BottomTabsScreenProps,\n  | 'children'\n  | 'placeholder'\n  | 'onWillAppear'\n  | 'onDidAppear'\n  | 'onWillDisappear'\n  | 'onDidDisappear'\n  | 'isFocused'\n  | 'tabKey'\n  | 'icon'\n  | 'selectedIcon'\n  | 'iconResourceName'\n> &\n  DefaultRouterOptions;\n\ntype SfSymbolOrImageSource =\n  | {\n      /**\n       * The name of the SF Symbol to use as an icon.\n       * @platform iOS\n       */\n      sf?: SFSymbol;\n    }\n  | {\n      /**\n       * The image source to use as an icon.\n       * @platform iOS\n       */\n      src?: ImageSourcePropType;\n    };\nexport interface NativeTabOptions extends BaseNativeTabOptions {\n  /**\n   * If true, the tab will be hidden from the tab bar.\n   */\n  hidden?: boolean;\n  /**\n   * The icon to display in the tab bar.\n   */\n  icon?: SfSymbolOrImageSource & {\n    /**\n     * The name of the drawable resource to use as an icon.\n     * @platform android\n     */\n    drawable?: string;\n  };\n  /**\n   * The icon to display when the tab is selected.\n   */\n  selectedIcon?: SfSymbolOrImageSource;\n}\n\nexport interface NativeTabsViewProps {\n  style?: {\n    fontFamily?: TextStyle['fontFamily'];\n    fontSize?: TextStyle['fontSize'];\n    fontWeight?: TextStyle['fontWeight'];\n    fontStyle?: TextStyle['fontStyle'];\n    color?: TextStyle['color'];\n    iconColor?: ColorValue;\n    backgroundColor?: ColorValue;\n    blurEffect?: BottomTabsScreenProps['tabBarBlurEffect'];\n    tintColor?: ColorValue;\n    badgeBackgroundColor?: ColorValue;\n    /**\n     * @platform android\n     */\n    rippleColor?: ColorValue;\n    /**\n     * @platform android\n     */\n    labelVisibilityMode?: TabBarItemLabelVisibilityMode;\n    '&:active'?: {\n      /**\n       * @platform android\n       */\n      color?: ColorValue;\n      /**\n       * @platform android\n       */\n      fontSize?: TextStyle['fontSize'];\n      /**\n       * @platform android\n       */\n      iconColor?: ColorValue;\n      /**\n       * @platform android\n       */\n      indicatorColor?: ColorValue;\n    };\n  };\n  /**\n   * https://developer.apple.com/documentation/uikit/uitabbarcontroller/tabbarminimizebehavior\n   *\n   * Supported values:\n   * - `none` - The tab bar does not minimize.\n   * - `onScrollUp` - The tab bar minimizes when scrolling up, and expands when scrolling back down. Recommended if the scroll view content is aligned to the bottom.\n   * - `onScrollDown` - The tab bar minimizes when scrolling down, and expands when scrolling back up.\n   * - `automatic` - Resolves to the system default minimize behavior.\n   *\n   * @default automatic\n   *\n   * @platform iOS 26\n   */\n  minimizeBehavior?: BottomTabsProps['tabBarMinimizeBehavior'];\n  /**\n   * Disables the active indicator for the tab bar.\n   *\n   * @platform android\n   */\n  disableIndicator?: boolean;\n  builder: ReturnType<\n    typeof useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      Record<string, (...args: any) => void>,\n      NativeTabOptions,\n      Record<string, any>\n    >\n  >;\n}\n"]}